version: '2'
services:
  nginx:
    container_name: nginx
    restart: always
    build: nginx/
    ports:
      - "80:80"
    volumes:
      - /www/static
    volumes_from:
      - server
    links:
      - server:server
  
  db:
    image: postgres
    env_file: .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}


  # RabbitMQ
  rabbitmq:
    image: rabbitmq
    hostname: rabbitmq
    env_file: .env
    expose:
      - '5672'
    ports:
      - "5672:5672"  # we forward this port because it's useful for debugging
      - "15672:15672"  # here, we can access rabbitmq management plugin


  # Elasticsearch
  elasticsearch:
    restart: always
    image: elasticsearch:1.7
    #command: elasticsearch -Des.network.host=0.0.0.0
    ports:
      - "9200:9200"
      - "9300:9300"
    expose:
      - "9200"
    hostname: elasticsearch

  # Celery worker
  worker: &app_base
    build: server/
    container_name: worker
    restart: always
    command: bash -c "sleep 10 && celery -A compraloahi worker -l info --beat"
    volumes:
      - ./server:/usr/src/app
    links:
      - db
      - rabbitmq
    env_file: .env
    environment:
      - C_FORCE_ROOT=true

  # Web django app
  server:
    <<: *app_base
    container_name: web
    restart: always
    command: sh /usr/src/app/init.sh
    env_file: .env
    #environment:
    #  - DATABASE_URL=postgres://${DB_USER}:${DB_PASS}@db/${DB_NAME}
    #  - DB_DEFAULT_URL=postgres://${DB_USER}:${DB_PASS}@db/${DB_NAME}
    volumes:
      - ./server:/usr/src/app
    expose:
      - "8000"
    links:
      - db
      - rabbitmq
      - elasticsearch
    depends_on:
      - db

